# 150. Eval Reverse Polish Notation

[150. Reverse polish notation](https://leetcode.cn/problems/evaluate-reverse-polish-notation/)

Idea: check 加减乘除四种情况 遇到符号就pop最近的两个去做操作 otherwise push就完事儿了. 下面是java和python两种答案

```python
def evalRPN(self, tokens: List[str]) -> int:
        stack = []
        for c in tokens:
            if c == "+":
                stack.append(stack.pop() + stack.pop())
            elif c == "-":
                a, b = stack.pop(), stack.pop()
                stack.append(b - a)
            elif c == "*":
                stack.append(stack.pop() * stack.pop())
            elif c == "/":
                a, b = stack.pop(), stack.pop()
                stack.append(int(b / a))
            else:
                stack.append(int(c))
        return stack[0]
```

```java
public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        for(String token : tokens){
            if(token.equals("+")){
                stack.add(stack.pop() + stack.pop());
            }           
            else if(token.equals("*")){
                stack.add(stack.pop() * stack.pop());
            }      
            else if(token.equals("-")){
                int num1 = stack.pop();
                int num2 = stack.pop();
                stack.add(num2 - num1);
            }

            else if(token.equals("/")){
                int num1 = stack.pop();
                int num2 = stack.pop();
                stack.add(num2 / num1);
            }else{
                stack.add(Integer.parseInt(token));
            }
        }
        return stack.pop();
    }
}
```

